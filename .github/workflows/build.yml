# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build app

on:
  push:
    tags:
      - v**

permissions:
  contents: write

jobs:
  build-android-app:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        id: checkout
        with:
          submodules: true
          lfs: false
          ref: ${{ github.ref }}

      - name: Set Up Flutter
        id: set-up-flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - run: flutter --version
      - run: flutter pub get

      - name: Decode Keystore
        id: android-decode-keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks

      - name: Create key.properties
        id: android-create-key-properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Build APK
        id: android-build-apk
        run: flutter build apk --release

      - name: Build appBundle
        id: android-build-appBundle
        run: flutter build appbundle

      - name: Upload Android app Release Artifacts
        id: upload-android-apps
        uses: actions/upload-artifact@v4
        with:
          name: Android app Release
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  build-ios-app:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v5
        id: checkout
        with:
          submodules: true
          lfs: false
          ref: ${{ github.ref }}

      - name: Set Up Flutter
        id: set-up-flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - run: flutter --version
      - run: flutter pub get

      - name: Build IPA
        id: apple-build-ipa
        run: flutter build ipa --no-codesign

      - name: Compress Archives and IPAs
        id: apple-compress-ipa
        run: |
          cd build
          tar -czf ios_build.tar.gz ios

      - name: Upload IOS app Release Artifacts
        id: upload-ios-apps
        uses: actions/upload-artifact@v4
        with:
          name: IOS app Release
          path: |
            build/ios_build.tar.gz

  create-release:
    runs-on: ubuntu-latest
    needs: [build-android-app, build-ios-app]
    if: ${{ always() && ( needs.build-android-app.result == 'success' || needs.build-ios-app.result == 'success' ) }}

    steps:
      - uses: actions/checkout@v5
        id: checkout
        with:
          submodules: true
          lfs: false
          ref: ${{ github.ref }}

      - name: Download app artifacts
        id: download-artifacts
        uses: actions/download-artifact@v5
        with:
          merge-multiple: true
          path: build

      - name: Create Release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/flutter-apk/app-release.apk,build/bundle/release/app-release.aab,build/ios_build.tar.gz"
          tag: ${{ env.APP_VERSION }}
          token: ${{ secrets.CHAINED_ACTIONS_PAT_TOKEN }}
          generateReleaseNotes: true
